// Generated by view binder compiler. Do not edit!
package com.example.laibrary.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.laibrary.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUpdateProfileBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnSave;

  @NonNull
  public final EditText etAgeUpdate;

  @NonNull
  public final EditText etEmailUpdate;

  @NonNull
  public final EditText etNameUpdate;

  @NonNull
  public final ImageView ivProileUpdate;

  @NonNull
  public final TextView textView15;

  private ActivityUpdateProfileBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnSave,
      @NonNull EditText etAgeUpdate, @NonNull EditText etEmailUpdate,
      @NonNull EditText etNameUpdate, @NonNull ImageView ivProileUpdate,
      @NonNull TextView textView15) {
    this.rootView = rootView;
    this.btnSave = btnSave;
    this.etAgeUpdate = etAgeUpdate;
    this.etEmailUpdate = etEmailUpdate;
    this.etNameUpdate = etNameUpdate;
    this.ivProileUpdate = ivProileUpdate;
    this.textView15 = textView15;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUpdateProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUpdateProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_update_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUpdateProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSave;
      Button btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.etAgeUpdate;
      EditText etAgeUpdate = ViewBindings.findChildViewById(rootView, id);
      if (etAgeUpdate == null) {
        break missingId;
      }

      id = R.id.etEmailUpdate;
      EditText etEmailUpdate = ViewBindings.findChildViewById(rootView, id);
      if (etEmailUpdate == null) {
        break missingId;
      }

      id = R.id.etNameUpdate;
      EditText etNameUpdate = ViewBindings.findChildViewById(rootView, id);
      if (etNameUpdate == null) {
        break missingId;
      }

      id = R.id.ivProileUpdate;
      ImageView ivProileUpdate = ViewBindings.findChildViewById(rootView, id);
      if (ivProileUpdate == null) {
        break missingId;
      }

      id = R.id.textView15;
      TextView textView15 = ViewBindings.findChildViewById(rootView, id);
      if (textView15 == null) {
        break missingId;
      }

      return new ActivityUpdateProfileBinding((ConstraintLayout) rootView, btnSave, etAgeUpdate,
          etEmailUpdate, etNameUpdate, ivProileUpdate, textView15);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
