// Generated by view binder compiler. Do not edit!
package com.example.laibrary.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.laibrary.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView tvIC;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView tvbook;

  @NonNull
  public final TextView tvbookid;

  @NonNull
  public final TextView tvlistQuantity;

  @NonNull
  public final TextView tvlisttotal;

  @NonNull
  public final TextView tvphone;

  @NonNull
  public final TextView tvrentdate;

  @NonNull
  public final TextView txtOption;

  private ItemBinding(@NonNull CardView rootView, @NonNull TextView tvIC, @NonNull TextView tvName,
      @NonNull TextView tvbook, @NonNull TextView tvbookid, @NonNull TextView tvlistQuantity,
      @NonNull TextView tvlisttotal, @NonNull TextView tvphone, @NonNull TextView tvrentdate,
      @NonNull TextView txtOption) {
    this.rootView = rootView;
    this.tvIC = tvIC;
    this.tvName = tvName;
    this.tvbook = tvbook;
    this.tvbookid = tvbookid;
    this.tvlistQuantity = tvlistQuantity;
    this.tvlisttotal = tvlisttotal;
    this.tvphone = tvphone;
    this.tvrentdate = tvrentdate;
    this.txtOption = txtOption;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tvIC;
      TextView tvIC = ViewBindings.findChildViewById(rootView, id);
      if (tvIC == null) {
        break missingId;
      }

      id = R.id.tvName;
      TextView tvName = ViewBindings.findChildViewById(rootView, id);
      if (tvName == null) {
        break missingId;
      }

      id = R.id.tvbook;
      TextView tvbook = ViewBindings.findChildViewById(rootView, id);
      if (tvbook == null) {
        break missingId;
      }

      id = R.id.tvbookid;
      TextView tvbookid = ViewBindings.findChildViewById(rootView, id);
      if (tvbookid == null) {
        break missingId;
      }

      id = R.id.tvlistQuantity;
      TextView tvlistQuantity = ViewBindings.findChildViewById(rootView, id);
      if (tvlistQuantity == null) {
        break missingId;
      }

      id = R.id.tvlisttotal;
      TextView tvlisttotal = ViewBindings.findChildViewById(rootView, id);
      if (tvlisttotal == null) {
        break missingId;
      }

      id = R.id.tvphone;
      TextView tvphone = ViewBindings.findChildViewById(rootView, id);
      if (tvphone == null) {
        break missingId;
      }

      id = R.id.tvrentdate;
      TextView tvrentdate = ViewBindings.findChildViewById(rootView, id);
      if (tvrentdate == null) {
        break missingId;
      }

      id = R.id.txt_option;
      TextView txtOption = ViewBindings.findChildViewById(rootView, id);
      if (txtOption == null) {
        break missingId;
      }

      return new ItemBinding((CardView) rootView, tvIC, tvName, tvbook, tvbookid, tvlistQuantity,
          tvlisttotal, tvphone, tvrentdate, txtOption);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
